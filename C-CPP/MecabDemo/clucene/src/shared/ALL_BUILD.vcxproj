<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{1F5D4BB2-A3F9-47D7-91FB-F1D318C08180}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\YungYiKim\Git\MecabDemo\clucene\src\shared;C:\YungYiKim\Git\MecabDemo\clucene\src\core;C:\YungYiKim\Git\MecabDemo\clucene\src\ext;C:\YungYiKim\Librarys\zlib\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\YungYiKim\Git\MecabDemo\clucene\src\shared;C:\YungYiKim\Git\MecabDemo\clucene\src\core;C:\YungYiKim\Git\MecabDemo\clucene\src\ext;C:\YungYiKim\Librarys\zlib\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/YungYiKim/Git/MecabDemo/clucene/src/shared/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HC:/YungYiKim/Git/MecabDemo/clucene -BC:/YungYiKim/Git/MecabDemo/clucene --check-stamp-file C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/YungYiKim/Git/MecabDemo/clucene/src/shared/CMakeLists.txt;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeLists.txt;C:\YungYiKim\Git\MecabDemo\clucene\cmake\DefineOptions.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFileCXX.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceRuns.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckFunctionExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroMustDefine.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseType.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckTypeSize.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFile.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseMisc.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseFunction.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckFunctionExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseSymbol.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckSymbolExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroCheckGccVisibility.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineFloat.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineDword.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineLongLongSyntax.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineStaticSyntax.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineMAXPATHValue.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckFloatByte.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckErrorHandling.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckHashmaps.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckNamespace.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckSnprintf.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckStdCallFunctionExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindThreads.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckLibraryExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckPthread.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckAtomicFunctions.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceRuns.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\TestForANSIForScope.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CLucene\clucene-config.h.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CLucene\_clucene-config.h.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/YungYiKim/Git/MecabDemo/clucene/src/shared/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HC:/YungYiKim/Git/MecabDemo/clucene -BC:/YungYiKim/Git/MecabDemo/clucene --check-stamp-file C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/YungYiKim/Git/MecabDemo/clucene/src/shared/CMakeLists.txt;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeLists.txt;C:\YungYiKim\Git\MecabDemo\clucene\cmake\DefineOptions.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFileCXX.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceRuns.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckFunctionExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroMustDefine.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseType.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckTypeSize.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFile.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseMisc.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseFunction.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckFunctionExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroChooseSymbol.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckSymbolExists.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\MacroCheckGccVisibility.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineFloat.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineDword.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineLongLongSyntax.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineStaticSyntax.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\DefineMAXPATHValue.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckFloatByte.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckErrorHandling.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckHashmaps.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\Macro_ChooseStatus.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckNamespace.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckSnprintf.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckStdCallFunctionExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindThreads.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckIncludeFiles.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckLibraryExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckPthread.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\cmake\CheckAtomicFunctions.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CheckCXXSourceRuns.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\TestForANSIForScope.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CLucene\clucene-config.h.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CLucene\_clucene-config.h.cmake;C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\CMakeFiles\acd32559745a931cf4f04003cae939f3\ALL_BUILD.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Build all projects</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/YungYiKim/Git/MecabDemo/clucene/CMakeFiles/acd32559745a931cf4f04003cae939f3/ALL_BUILD.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\ALL_BUILD</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Build all projects</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/YungYiKim/Git/MecabDemo/clucene/CMakeFiles/acd32559745a931cf4f04003cae939f3/ALL_BUILD.rule;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\YungYiKim\Git\MecabDemo\clucene\src\shared\CMakeFiles\ALL_BUILD</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="CMakeFiles\ALL_BUILD" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:/YungYiKim/Git/MecabDemo/clucene/src/shared/clucene-shared.vcxproj">
      <Project>D28743BE-9829-48EF-97EC-B8EC2E050D8C</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>